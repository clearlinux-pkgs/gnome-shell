From 133a1e7befdb9dc16a611c5d38695b73ea443cc5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@gnome.org>
Date: Thu, 12 Sep 2019 17:26:08 +0200
Subject: [PATCH 114/152] cleanup: Remove trailing spaces

We generally avoid these (not least because Linus hates them enough
to make git complain loudly), but some sneaked in over time ...

https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/731
---
 js/misc/history.js                   | 2 +-
 js/ui/components/automountManager.js | 6 +++---
 js/ui/components/autorunManager.js   | 8 ++++----
 js/ui/components/telepathyClient.js  | 4 ++--
 js/ui/keyboard.js                    | 2 +-
 js/ui/lookingGlass.js                | 2 +-
 js/ui/messageTray.js                 | 2 +-
 js/ui/notificationDaemon.js          | 2 +-
 js/ui/shellMountOperation.js         | 2 +-
 js/ui/status/thunderbolt.js          | 4 ++--
 10 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/js/misc/history.js b/js/misc/history.js
index 092c64060..93cf4a7b0 100644
--- a/js/misc/history.js
+++ b/js/misc/history.js
@@ -28,7 +28,7 @@ var HistoryManager = class {
         this._entry = params.entry;
 
         if (this._entry) {
-            this._entry.connect('key-press-event', 
+            this._entry.connect('key-press-event',
                                 this._onEntryKeyPress.bind(this));
         }
     }
diff --git a/js/ui/components/automountManager.js b/js/ui/components/automountManager.js
index c9ae392d5..5c23c6615 100644
--- a/js/ui/components/automountManager.js
+++ b/js/ui/components/automountManager.js
@@ -156,7 +156,7 @@ var AutomountManager = class {
             !volume.should_automount() ||
             !volume.can_mount()) {
             // allow the autorun to run anyway; this can happen if the
-            // mount gets added programmatically later, even if 
+            // mount gets added programmatically later, even if
             // should_automount() or can_mount() are false, like for
             // blank optical media.
             this._allowAutorun(volume);
@@ -222,14 +222,14 @@ var AutomountManager = class {
             GLib.source_remove(volume._allowAutorunExpireId);
             delete volume._allowAutorunExpireId;
         }
-        this._volumeQueue = 
+        this._volumeQueue =
             this._volumeQueue.filter(element => (element != volume));
     }
 
     _reaskPassword(volume) {
         let prevOperation = this._activeOperations.get(volume);
         let existingDialog = prevOperation ? prevOperation.borrowDialog() : null;
-        let operation = 
+        let operation =
             new ShellMountOperation.ShellMountOperation(volume,
                                                         { existingDialog: existingDialog });
         this._mountVolume(volume, operation);
diff --git a/js/ui/components/autorunManager.js b/js/ui/components/autorunManager.js
index 751c45a89..2001e2afe 100644
--- a/js/ui/components/autorunManager.js
+++ b/js/ui/components/autorunManager.js
@@ -63,7 +63,7 @@ function startAppForMount(app, mount) {
     files.push(root);
 
     try {
-        retval = app.launch(files, 
+        retval = app.launch(files,
                             global.create_app_launch_context(0, -1));
     } catch (e) {
         log(`Unable to launch the application ${app.get_name()}: ${e}`);
@@ -213,11 +213,11 @@ var AutorunDispatcher = class {
     }
 
     _addSource(mount, apps) {
-        // if we already have a source showing for this 
+        // if we already have a source showing for this
         // mount, return
         if (this._getSourceForMount(mount))
             return;
-     
+
         // add a new source
         this._sources.push(new AutorunSource(this._manager, mount, apps));
     }
@@ -262,7 +262,7 @@ var AutorunDispatcher = class {
 
     removeMount(mount) {
         let source = this._getSourceForMount(mount);
-        
+
         // if we aren't tracking this mount, don't do anything
         if (!source)
             return;
diff --git a/js/ui/components/telepathyClient.js b/js/ui/components/telepathyClient.js
index 0943301d3..2aa027773 100644
--- a/js/ui/components/telepathyClient.js
+++ b/js/ui/components/telepathyClient.js
@@ -583,7 +583,7 @@ var ChatSource = class extends MessageTray.Source {
 
         let msg = Tp.ClientMessage.new_text(type, text);
         this._channel.send_message_async(msg, 0, (src, result) => {
-            this._channel.send_message_finish(result); 
+            this._channel.send_message_finish(result);
         });
     }
 
@@ -653,7 +653,7 @@ var ChatNotification = class extends MessageTray.Notification {
      *   sender: the name of the sender,
      *   timestamp: the time the message was sent
      *   direction: a #NotificationDirection
-     * 
+     *
      * @noTimestamp: Whether to add a timestamp. If %true, no timestamp
      *   will be added, regardless of the difference since the
      *   last timestamp
diff --git a/js/ui/keyboard.js b/js/ui/keyboard.js
index 183f82138..45eb5ce82 100644
--- a/js/ui/keyboard.js
+++ b/js/ui/keyboard.js
@@ -1081,7 +1081,7 @@ var Keyboard = class Keyboard {
                 this.hide();
         });
 
-        Meta.get_backend().connect('last-device-changed', 
+        Meta.get_backend().connect('last-device-changed',
             (backend, deviceId) => {
                 let manager = Clutter.DeviceManager.get_default();
                 let device = manager.get_device(deviceId);
diff --git a/js/ui/lookingGlass.js b/js/ui/lookingGlass.js
index 0317973e8..e2bb8cc27 100644
--- a/js/ui/lookingGlass.js
+++ b/js/ui/lookingGlass.js
@@ -881,7 +881,7 @@ var LookingGlass = class LookingGlass {
             return true;
         });
 
-        this._history = new History.HistoryManager({ gsettingsKey: HISTORY_KEY, 
+        this._history = new History.HistoryManager({ gsettingsKey: HISTORY_KEY,
                                                      entry: this._entry.clutter_text });
 
         this._autoComplete = new AutoComplete(this._entry);
diff --git a/js/ui/messageTray.js b/js/ui/messageTray.js
index b9e4cd715..560deda6f 100644
--- a/js/ui/messageTray.js
+++ b/js/ui/messageTray.js
@@ -335,7 +335,7 @@ class NotificationApplicationPolicy extends NotificationPolicy {
 // event sound is played when the notification is shown (if the policy for
 // @source allows playing sounds).
 //
-// [1] https://developer.gnome.org/notification-spec/#markup 
+// [1] https://developer.gnome.org/notification-spec/#markup
 var Notification = class Notification {
     constructor(source, title, banner, params) {
         this.source = source;
diff --git a/js/ui/notificationDaemon.js b/js/ui/notificationDaemon.js
index aa65bf6c8..262125dcf 100644
--- a/js/ui/notificationDaemon.js
+++ b/js/ui/notificationDaemon.js
@@ -618,7 +618,7 @@ function getPlatformData() {
 
 function InvalidAppError() {}
 
-var GtkNotificationDaemonAppSource = 
+var GtkNotificationDaemonAppSource =
 class GtkNotificationDaemonAppSource extends MessageTray.Source {
     constructor(appId) {
         let objectPath = objectPathFromAppId(appId);
diff --git a/js/ui/shellMountOperation.js b/js/ui/shellMountOperation.js
index a8023a2d9..ff5cb2366 100644
--- a/js/ui/shellMountOperation.js
+++ b/js/ui/shellMountOperation.js
@@ -202,7 +202,7 @@ var ShellMountOperation = class {
     _onShowUnmountProgress(op, message, timeLeft, bytesLeft) {
         if (!this._notifier)
             this._notifier = new ShellUnmountNotifier();
-            
+
         if (bytesLeft == 0)
             this._notifier.done(message);
         else
diff --git a/js/ui/status/thunderbolt.js b/js/ui/status/thunderbolt.js
index 6c9fbd892..e4de032a9 100644
--- a/js/ui/status/thunderbolt.js
+++ b/js/ui/status/thunderbolt.js
@@ -156,12 +156,12 @@ var AuthRobot = class {
 
         /* check if authorization is enabled in the daemon. if not
          * we won't even bother authorizing, because we will only
-         * get an error back. The exact contents of AuthMode might 
+         * get an error back. The exact contents of AuthMode might
          * change in the future, but must contain AuthMode.ENABLED
          * if it is enabled. */
         if (!cli.authMode.split('|').includes(AuthMode.ENABLED))
             return;
-        
+
         /* check if we should enroll the device */
         let res = [false];
         this.emit('enroll-device', dev, res);
-- 
2.23.0

